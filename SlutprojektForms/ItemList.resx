<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJ
        TUUH5QYEBCg6FiedogAAEtZJREFUaEOVWQl0VdW53me+596bAZVV7cO6up6vVmufQhKSkMigoNUIZB7I
        HTKHDECQkATCkBAgJECYx0ACCYRAEkCReVJGpbZPnNuCqKiA1dfi0NXV+rrf9+97z00I2K7etfY653z3
        P3v/+9//9+//34d9+eWX7PLly9L169dZc3Mz279/v3L27Fll7969CsNv8+bNAjt9+rS6e/du5euvv2at
        ra3s4MGDAezi//yG9ezaIZ04dkR9/fxZ9eWX9sovvbyf7e7qlE4eP6peOH9O2b9vr7xn74usvb1dOnTo
        kPrKK6+oXV1d8p49e9j27dulI0eOEKYQhj4D2MmTJ9Xu7m758OHD7MMPP2Q3btyQGOecQUl5165dyrJl
        y7SWlhb1+PHj0vr16/UFCxaojY2NOhRXoaS0du1ava6uTl28eLEOxVVMRvrdqR71t/s2yLULF+tLV29Q
        Zy3dJDc2rTTKZ9Up8xuW6k2rN6qzmzbJDcDm1y+Sd29vVtvbtio9PT3S6tWr9Xnz5tG4OiYjsFWrVum1
        tbVKU1OT3tbWpkAvGcbUN23apJw6dUqB4pKwGs0Kithnz55tVlVVscrKSmrSlClTgsrKyuxQnFVUVFCT
        gQWj2c8f3cvufbKABcXkDx4wPH9lUGzBFlt0wSYDzRxW0BL6RMEWZ2xBa1+M5H40siD8rthcVlBSxsrL
        yxX0FTJ16lTD6/UyjMWmTZumWlh+fj7DpNj8+fNVTMJJhsKkGIP52cqVKzVYVc/JyTHT0tL0hIQEKT09
        3YaObC6Xy0xNTdWTkpIk/Gd6PB5bZmamvdCdrDmH5YaiHXQOy2sJic2f7hiWXwkly4Nj8mYEx+aXo1Xa
        A1h+JeRaIX/o3hHZd/3fyiEsIyPDnp2dbUyYMMGekpKiJicny4RlZWVZmIImQ8aEQXWsvkGWZ8eOHVOw
        NOrSpUsZlJMgRMJBaDYo3h+jzgiT8zMTzQdGeR+1R+dcsEXlPsIeLmEV2eNs07LG2WsL4tQyVzxrf2GM
        NDNnrAHchBcyIzL3ETMq98KgEd5f5E5IdKA/DcZguJJy9ExjaFDewpzUoIeKFWDbtm2Tjx49qpKllc7O
        TiUkJIQEqZkT0pKDy7LHqZ6kFFCRs/Ks8UaJO95Znf+8UpqZwHhrGFs96Vn9P5/0PGqPynkdyjzEHi9k
        U7zxtmJ3gnNm7jilIncc298Qw8qy4m2lngQH9UNymOBr94/0PlxXMNasKYqTcWWd059mZd54s9QT71hQ
        /Jw8J+95VpsXJ01ITaKJBGOFlcmTJ7MdO3ZIREx24MABtmLFCn3WrFkalsbmzkgxgqOyQwYOdUcPGOKK
        vjvcFYNrrP0xd+Q94a7hoUNcUbjGAosxh3jjnZHZ7wSFe1IHhmcOs+QGRrhGWHIhg10xDsLCM2Od4d5U
        B8mHeZIcj7mGDkR/IUNc1O8TwYNdw4BFWdjASHfUj4d77y50J8lwUTv8XQNxDYourKamhhxdkK44P9th
        RuaEGrEFW43EF/7kyJh+054+/aaeUUntz0ZGxU1nRrmF/RntayNt+vfO9PJv7iRn3o59Y6aVf0/vCSz9
        djmbwKbfNBOm/smIyd9uROQOqJmap77wwgsh0FObMWMGY6+++iqjUDdz5kx96ZRkPSTcO0pPq/hafeMo
        Vz46z5XLZ7l85RyXPnkd92e4gvu+mIp7wtRLZ4Cdv0WuL6YK7LyQl9GvwPC/wEiOsI/92MfALhzmRvK0
        b+1hWaMayzIMGFVHwNAFERGTFTg4xWPGfjaF3Rfj+YXzmeLfG7VNXF25gasr1nOjaQ23LV/L9aa1eAa2
        /N/HtAC2rhdb9gMYxtXmLeOOMUWXBsV6hnRXPSdTOKTQjMChshMnTigdHR0KYibzZCSz9LQU875Y7yhH
        eNZ825CshbawrPqgCO/i0KGeBke4t9HCgm/FFvwLrLE/FgLMHu5tMICZfbEwgS0EVjswJmsMiBiUDiKS
        0tBTgr4qo+3RIiLCmc0FIppDcx4MCffkBw1xTwwJcxfjWmo+7inE/STc0/WOmHOwu+QHsImhvViJY7C7
        mDCScw5xF/TDSoEVhmL80Ojsh7NcKbLbT0RsLL1ExMbi2/0mZtnNiJxBxqiic/rkOm6vque2qkVcm7nY
        12Y0cnvlv8b0fxMzqhr6YA2+cSfN49DjghGe85PWubnKLUSEj7Dly5dr1dXV+oqyJC00wvuUnjb9G/Xi
        Ca58foErn77O5c9/zdmN34h75bNeTPJj8p0wevfqa1y+5seu+uTU/phfTrr2hsCs/9WLx7mRUv6dI8z7
        VIOPiGRpHxHJp+HgKmbB2P3l7IERngeCRhacsGXN/LtWMu8faNxWXMPtpbXcKK7lWmkdvxOmAzNxfzt2
        B7mSGm7ehvV5F+Pq2dV/d44oOPngKPfPFhbFi82FfBqBQxXRg5RetGgRS0xOlbIykkwI/lcwNgBbePYZ
        LXcd1+ch/NQe4mrtYS7PP86VumNcx7MxDxj+++fYQbx78HY5gR3xY0d9cnWHuZ6zhhsY1z7YE//TkZ6H
        3OlJTuyIqhU9LKXJPXTEacorzJSUVOPXc6PZqTkjVWdk1nKjrI3LPV9wtvtLrnRd43LXda7s+pzL3Tf8
        GO77Yj3AdvXKSQL7o+//Pph0G0ZjfMWNqe3cEZnVtGXqM3p9YRzyj1TZ7XYLIgbidB8iBiObcsbHx7NU
        5CBs0DR2d5SrzMxZyVkXBkanEq5ax0dc6bwqnm/FPu2DXb8jpndc4crOfth2wj7zYehLz1nF74lylTdP
        eUZNSk5hhYWFLC8vT7OICOMyhirCCnk6cg9KQ23IsqQFhXF6yFD3eDOp9q/yto9Ep6SEDKvQIHRlsFgv
        5rvSwLdi18TEApi4WthVP0ZXYB2fcDNl3l+DI1zP1+Y/byBGq9BH6ZN7BIiowsFF6kfKQpDS0NCGiXGq
        LczzS+PZyi/U5ne42vmJGMCyEg2u7fhYDNYXUwPYH9F8yqo7PuFSQO4G+roq3rUwmoDANr7Fbb+a/oWB
        cRlrpIyTUtOgvlme2FysbRyVCwlZSgcXuhJ0M9x7rzFq0rva8te4alnSP7CljAzrsF3X/dhVH7YTcjs+
        E8sfkCMFISftwLMlF1D6uuhfX36em6NK3zMw7t7Kp0gXS2kVlYzIp8U27k+YLCLasRwGWTwjNdl8bEzm
        AEds/jF1wTEf6UhxuAYpIgbEYMaUrVxdfBpkIpfxKaG2vM+NgnVc3fy+UEhMCBNWF58S8hJNyj9x6o8m
        QURUFh7nztj8478cnRmakZYsKhcqOPxEpITJV7n0JSLKHCdKLVEMpKcmy6kpyaFB0dlblYpuofRtRMSz
        7lmGXW6XUEpgiApy83vcMb6aqxveEs/CmohA5owubvMu6yU2JhkgIhkF49gjs1sx/l0IBjbSoz8RxY6I
        IkDqUwQg5KUIIuJq310xWgke6plpTNzQaxkiTsBVbnBb3hquVZDSCHN+xdX1F7ktfo64ygiTgnRYCW36
        Tm7krhYrIlwCk6d7a+W0wo08ONIzm68fQuOLcswiIoyqEhFF7kGODQdXH3jgAavcEkRE0+3ReQxkTLWl
        L/xea78sOhbWRKOBNJBTL2rmatk2XywWGBTZ+A7X4+dyCRanCQrSYYIkpxZvFv4rMOE6fnLC4vaMhd87
        wt2pKH5JDxmNakZRbk2aNImhLPSVW0TEtrY2UdhCwCKiKGzlofnMHu6OMsfOvKnBT28jIpFnMnwailgT
        UdGUDW8LpeWN7woZQTpYXC2CwlPagcGPd/isTO+JCbV8wO1jZ9wMGeoa5lfaKmyDUNiSe/QWthcvXmRN
        TU1aVVWVQUcDWA7d7x5mkSvB+I+YzJ+bo8s+kta/LfyW/M9aTvJDHa5hwEUIEyEMFidftsXPhnu8GbAm
        WdzIXcWN6Z2+3c8/cdEfmrzuIjdGT70yKDbz4UmeeB3jk3v0JaIBN76ViACDaEekMw8IiuUBg0MeHZ35
        YyN24jl58Rmx9RIRyReFxaG0Onsft7sXcwWWE5hFxIRZtxIRE7J7lnB99kviPYFhQoLYlB6gfyO26Oyg
        J9x3I3INwPgBIubm5gaISAdJ7OWXX5ZoT58zZ45K1bhfmPzJjgiiPzUu3eGIzulWZ70kLC2IQ5ZBI4VE
        ojOhkSsdtKn4cggNBDT6EVHd/hE3MpBL1x4QOQopbK0OkVir3svNqNxdY8alB2FcFePfRsQ1a9YY3d3d
        CqODwJ07dypvvfUWWZcaRRBBxGfj0xgLy2dBkd56s3STSG6ENdFoQCKduugk11IXik1DYOS/txARUYN2
        ye0fCzm54VVfJOlLREzeNqmFh0Z5GulQZ3yi0CNARFKciAg9JdKXwbGVrVu39iciEQAWT0axO4khB5lo
        updAKZ8L+PIGHxHVJWe4nlTHpfYrgoSE3UZEvKe0XeYa5JQmVPhQ2hfufMQma9s8Tf8IjXQX8bZHJEqU
        wCsFjaxNJ0zCLdrb22U6SWVXr17tT0TrWIrcxKxB4hIU4f6VnlDzHQ1sETFAupUXuJkwt3f3Iwy+bIKI
        GhERrkCKUXSwJczh2orX/UT0kZP6U7de4kbC3L+YYe7RCwqeo0BAe4WdFCciejweQUSk0AZZ+5bDGiJi
        YmJigIhooYggdnT2sP7M9M/lTe+LZQ0QEQrKsKojAZFi49viWWD9iUgYJiXk1r3pw8jCRETqj1YG/SNR
        +vmLFaNkKDvAr/htO2KAiFR7+YloQOEAEdG0vAmJ+k+GuwbZRpRc1JrOCssJa6OJ+AplBenW/FaQlDCy
        8C1EhIIa/hcY/N1HTiIi5RyQX3aOmyNK3rw72vMjb3qiCWXpBJUsrUMf1U9Ehc7HA0TE1qjQkS+UpBYg
        Ij2zQVNY5LMZIcGxuYepZLLClY90INiWP3A9sZbLq1CoWqTrvyOST698Q8hJWy8LPw8QkXKOuiPcGZN3
        eOTz6fdkZSSSpUWajEbcIiLKpaWlDDFaQoLnI+KWLVs0PxEtCxMByOKoYpJlT3qSGRSVtU6ftgNL60uc
        RBpKyrRd4loyCLb0nG+n60dEsSpEvCWnhRwRVpAY7woiQmltWien/jEOjU3WJV2ssOcgIsI1GHZu+oyh
        is8XUJh8RRyW4wXrzJgqB1oiOz9zr2QL95YZKIVoQLGsRESy+LYr3JY6n+sLjwo3IH+1iEjuIYhIitUf
        h9wCrrZ/6LMwvSvc7FNuQxJlj/CUsf8uonFJcVptsSOiSSCiCSLaAkSsra0N7IiUmhIRIUjLQ1YPQXOy
        iAJKnMbrqQv+prX9oZeIaFLnZ9w+YRE2mQM+17GIGN+HiMDJtZAQYRNC0WC9C+V19GdLqfsb9e/POTS0
        O+2IwdBTo2KA7du3TxARUUTFMpB1iQjkV2Rl6sCYkzdWd0a4w+xxFV/JLb8TyyqIiEEpGdKLNnGt7pCf
        dCBn87vIs5vEVZATubSO/zUkVrRSYuckIqIPueX33Iyr/N8Bka4I3vWglZKShS1XUckDUG4p69at03t6
        enqJePDgQQYr00xpaSjkkML0zLwZSbbHx0z4qfnExNfk+Udhua/EslLeINxk28cor/w7ImFUmbRdEeWV
        RVgqWoUcLEwrJTCsgoL+bLETzz/0pOv+zLTkYIxHCtO4NAEiYggRsaioiCFySKdPn1YYdhiltbX1TkQk
        5elFwhyFrkQzOCproj62+i/yigs+EsJiZF2ahHWO4cMoKhAGv7Ww7n4Y3ldRe6K/7xyRWfkFmYmWH9+J
        iDodlGLnVugbpCAidkQVcdoGnxZEjIuLo5fEDonYTS9qLKyIDX7WHRQcnT3H8fTUL/T8dVyp7PalplXd
        3KjcxVU8K1W7fxDTLayii2sF67kd/aC/2VFx7gFlnvHkkuILGlJRE4qSewoMepkos2xUI1IhQGGEwT2k
        +vp6O4pbO66M6jDcyyUlJcGIj3YIs9X1s9iR1oVSbmFJyL3Dc4bbIryzjMicDcjMNofG5LYEDcttsUXm
        bkJrvhNm92POaMJyNiAaVUPh6OyCotBZFWV61H2MYTzxHbG4uDgEm4nx9NNPs+rqakYfXBctWuSkD7O4
        Z+zbb7+lilxBKJHxh4b0T6PPuhRe5s6dq9DWiZ1IAwEEVlMzV+Hvdcr82ll5ybqtcn1jkzG5qlaZO79e
        X7pirda4Zotcv7jJmFRVK9cAW0LY6lZ5YeNSo6SyRq5Z0KCvWL1e5fwmO7OvVW2smy3DUHpzc7NKlcmS
        JUsMMlhDQ4P4UkxfculcGnrJ9Bn6gw8+kOhbs/g2DqVoRoy+dR87dkyjSdAxMF5m9J3cwvbv309xnb30
        4ovqKydPaHt6dsm78e6OrZvYoQP71VOvnATWJe/Z3c062jezQwf3C7merk6pp2sn62hrZUcOHVTp/IIO
        FDs6OhgUlpBOqOCXBsUl4PRNXkLRrcKXNZKj7+WXLl1i165dY/8PRDxONhUe+T4AAAAASUVORK5CYII=
</value>
  </data>
</root>